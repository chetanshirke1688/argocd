# in a workflow. The resource template type accepts any k8s manifest
# (including CRDs) and can perform any kubectl action against it (e.g. create,
# apply, delete, patch).
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: k8s-jobs-poc
spec:
  entrypoint: pi-tmpl
  templates:
  - name: pi-tmpl
    resource:                   # indicates that this is a resource template
      action: apply            # can be any kubectl action (e.g. create, delete, apply, patch)
      # The successCondition and failureCondition are optional expressions.
      # If failureCondition is true, the step is considered failed.
      # If successCondition is true, the step is considered successful.
      # They use kubernetes label selection syntax and can be applied against any field
      # of the resource (not just labels). Multiple AND conditions can be represented by comma
      # delimited expressions.
      # For more details: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      successCondition: status.succeeded > 0
      failureCondition: status.failed > 3
      manifest:               #put your kubernetes spec here
        apiVersion: apps/v1
        kind: Deployment
        metadata: 
          labels: 
            app: spring-boot-app
          name: spring-boot-app
        spec: 
          replicas: 1
          selector: 
            matchLabels: 
              app: spring-boot-app
          template: 
            metadata: 
              labels: 
                app: spring-boot-app
            spec: 
              containers: 
                - 
                  image: gazgeek/springboot-helloworld
                  imagePullPolicy: IfNotPresent
                  name: springboot-helloworld
                  ports: 
                    - 
                      containerPort: 9080